# args: source, mountpoint
_mnt_aufs() {
    src="${1}"
    mnt="${2}"
    msg "::: Adding new aufs branch: ${src} to ${mnt}"
    mkdir -p "${mnt}"
    /bin/mount -t aufs -o remount,append:"${src}"=ro none "${mnt}"
}

# args: source, mountpoint
_mnt_bind() {
    src="${1}"
    mnt="${2}"
    msg "::: Binding ${src} to ${mnt}"
    mkdir -p "${mnt}"
    /bin/mount -o bind "${src}" "${mnt}"
}

# args: /path/to/image_file, mountpoint
_mnt_squashfs() {
    img="${1}"
    mnt="${2}"
    img_fullname="${img##*/}";
    img_name="${img_fullname%.*}"
    tmp_mnt="/ro_branch/${img_name}"

    if [ "${copytoram}" = "y" ]; then
        msg -n ":: Copying squashfs image to RAM..."
        /bin/cp "${img}" "/copytoram/${img_fullname}"
        if [ $? -ne 0 ]; then
            echo "ERROR: while copy ${img} to /copytoram/${img_fullname}"
            launch_interactive_shell
        fi
        img="/copytoram/${img_fullname}"
        msg "done."
    fi

    mkdir -p "${tmp_mnt}"
    /bin/mount -r -t squashfs "${img}" "${tmp_mnt}"
    if [ $? -ne 0 ]; then
        echo "ERROR: while mounting ${img} to ${tmp_mnt}"
        launch_interactive_shell
    fi

    if [ "/${mnt#/*/}" = "/" ]; then
        _mnt_aufs "${tmp_mnt}" "${mnt}"
    else
        _mnt_bind "${tmp_mnt}" "${mnt}"
    fi
}

run_hook() {
    if [ "x${arch}" = "x" ]; then
        arch="$(uname -m)"
    fi

    if [ "x${rw_branch_size}" = "x" ]; then
        rw_branch_size="75%"
    fi

    if [ "x${copytoram_size}" = "x" ]; then
        copytoram_size="75%"
    fi

    if [ "x${archisobasedir}" = "x" ]; then
        archisobasedir="arch"
    fi

    if [ "x${isomounts}" != "x" ]; then
        isomounts="/bootmnt/${isomounts}"
    else
        isomounts="/bootmnt/${archisobasedir}/isomounts"
    fi

    if [ "x${archisodevice}" = "x" ]; then
        archisodevice="/dev/disk/by-label/${archisolabel}"
    fi

    # set mount handler for archiso
    mount_handler="archiso_mount_handler"
}

archiso_mount_handler() {
    newroot="${1}"

    msg ":: Waiting for boot device..."
    while ! poll_device ${archisodevice} 30; do
        echo "ERROR: boot device didn't show up after 30 seconds..."
        echo "   Falling back to interactive prompt"
        echo "   You can try to fix the problem manually, log out when you are finished"
        launch_interactive_shell
    done

    FSTYPE=$(blkid -o value -s TYPE -p ${archisodevice} 2> /dev/null)
    if [ -n "${FSTYPE}" ]; then
        if mount -r -t "${FSTYPE}" ${archisodevice} /bootmnt > /dev/null 2>&1; then
            if [ -e "${isomounts}" ]; then
                echo "SUCCESS: Mounted archiso volume successfully."
                fserror="0"
            else
                echo "ERROR: Mounting was successful, but the ${isomounts} file does not exist."
                fserror="1"
            fi
        else
            echo "ERROR; Failed to mount ${archisodevice} (FS is ${FSTYPE})"
            fserror="1"
        fi
    else
        echo "ERROR: ${archisodevice} found, but the filesystem type is unknown."
        fserror="1"
    fi

    if [ "${fserror}" = "1" ]; then
        echo "   Falling back to interactive prompt"
        echo "   You can try to fix the problem manually, log out when you are finished"
        launch_interactive_shell
    fi

    if [ "${copytoram}" = "y" ]; then
        msg -n ":: Mounting /copytoram (tmpfs) filesystem, size=${copytoram_size}..."
        mount -t tmpfs -o "size=${copytoram_size}",mode=0755 copytoram /copytoram
        msg "done."
    fi

    msg -n ":: Mounting rw_branch (tmpfs) filesystem, size=${rw_branch_size}..."
    mount -t tmpfs -o "size=${rw_branch_size}",mode=0755 rw_branch /rw_branch
    msg "done."

    msg ":: Mounting root (aufs) filesystem"
    /bin/mount -t aufs -o dirs=/rw_branch=rw union "${newroot}"
    if [ $? -ne 0 ]; then
        echo "ERROR: while mounting root (aufs) filesystem."
        launch_interactive_shell
    fi

    msg ":: Mounting images"
    while read img imgarch mountpoint type; do
        # check if this line is a comment (starts with #)
        [ "${img#"#"}" != "${img}" ] && continue

        [ "$imgarch" != "$arch" ] && continue

        [ ! -r "/bootmnt/${archisobasedir}/${img}" ] && continue

        if [ "${type}" = "bind" ]; then
            _mnt_bind "/bootmnt/${archisobasedir}/${img}" "${newroot}${mountpoint}"
        elif [ "${type}" = "squashfs" ]; then
            _mnt_squashfs "/bootmnt/${archisobasedir}/${img}" "${newroot}${mountpoint}"
        fi
    done < "${isomounts}"

    if [ "${copytoram}" = "y" ]; then
        /bin/umount /bootmnt
    else
        _mnt_bind /bootmnt "${newroot}/bootmnt"
    fi
}

# vim:ft=sh:ts=4:sw=4:et:
